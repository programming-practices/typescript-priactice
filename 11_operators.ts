// =====================================================================================================================
// =====================================================================================================================
// =====================================================================================================================
interface Person {
    name: string;
    age: number;
}

type PersonKey = keyof Person;                                                                          // 'name', 'age'

let key: PersonKey = 'name';
key = 'age';
// key = 'job';                                                                                             // ERROR !!!

// =====================================================================================================================
// =====================================================================================================================
// =====================================================================================================================
type User = {
    _id: number;
    name: string;
    email: string;
    createdAt: Date;
}

type UserKeysNoMeta_1 = Exclude<keyof User, '_id' | 'createdAt'>                                     // 'name' | 'email'
type UserKeysNoMeta_2 = Pick<User, 'name' | 'email'>                                                 // 'name' | 'email'

let user_1: UserKeysNoMeta_1 = 'name';
user_1 = 'email';
// user_1 = '_id';                                                                                          // ERROR !!!

// let user_2: UserKeysNoMeta_2 = 'name';                                                                   // ERROR !!!
// user_2 = 'email';                                                                                        // ERROR !!!
// user_1 = '_id';                                                                                          // ERROR !!!
